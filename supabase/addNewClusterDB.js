import supabase from "./supabaseClient.js";

export const addNewClusterDB = async (tx_hash, config_hash, operators) => {
  try {
    const { data, error } = await supabase
      .from("whitelisted_clusters")
      .insert([{ tx_hash, config_hash, operators }]);

    if (error) {
      console.error("Error adding new cluster to database:", error.message);
      return null;
    }
    return data;
  } catch (error) {
    console.error("Error adding new cluster to database:", error.message);
    return null;
  }
};

//sachant que
// create table
//   public.whitelisted_clusters (
//     id bigint generated by default as identity not null,
//     created_at timestamp with time zone not null default now(),
//     config_hash text not null,
//     lock_hash text null,
//     tx_hash text null,
//     num_operators integer not null default 4,
//     num_validators integer not null default 1,
//     name text not null,
//     validator_addresses text[] null,
//     operators text[] null,
//     is_deposit_data_stored boolean null,
//     deposit_data_url text null,
//     is_deposit_data_used boolean null,
//     constraint whitelisted_clusters_pkey primary key (id),
//     constraint whitelisted_clusters_config_hash_key unique (config_hash)
//   ) tablespace pg_default;

// create trigger trigger_update_num_operators before insert
// or
// update on whitelisted_clusters for each row
// execute function update_num_operators ();
